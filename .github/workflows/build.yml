name: Build and Release Reporter App

on:
  push:
    tags:
      - "v*.*.*" # Triggers on version tags like v1.0.0
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build executable using spec file
        run: |
          pyinstaller reporter.spec --noconfirm

      - name: Sign macOS app bundle (self-signed)
        if: matrix.os == 'macos-latest'
        run: |
          # Create a temporary keychain
          security create-keychain -p "" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "" build.keychain
          security set-keychain-settings build.keychain
          
          # Create a self-signed certificate
          security add-certificates /System/Library/Keychains/SystemRootCertificates.keychain
          
          # Sign the app bundle with ad-hoc signature
          codesign --deep --force --verify --verbose --sign "-" dist/Reporter.app
          
          # Verify the signature
          codesign --verify --verbose=2 dist/Reporter.app
          spctl --assess --verbose dist/Reporter.app || echo "Note: Self-signed apps will show Gatekeeper warnings"

      - name: Package and rename executable for OS (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          Compress-Archive -Path "dist\Reporter" -DestinationPath "Reporter-1.0.0-windows.zip"
        shell: powershell

      - name: Package and rename executable for OS (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          cd dist
          tar -czf ../Reporter-1.0.0-macos.tar.gz Reporter/ Reporter.app/
        shell: bash

      - name: Package and rename executable for OS (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          cd dist
          tar -czf ../Reporter-1.0.0-linux.tar.gz Reporter/
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Reporter-1.0.0-${{ matrix.os }}
          path: Reporter-1.0.0-*

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: latest
          name: "Reporter - Latest Build"
          body: |
            Latest build of Reporter app with PyQt GUI and GitHub integration.
            
            **Download for your platform:**
            - **macOS**: Reporter-1.0.0-macos.tar.gz (includes both .app bundle and standalone)
            - **Windows**: Reporter-1.0.0-windows.zip 
            - **Linux**: Reporter-1.0.0-linux.tar.gz
            
            **Features:**
            - PyQt dashboard with autofocus text input
            - GitHub integration with clickable links
            - Work logging with organization/project context
            - Daily standup report generation
          files: Reporter-1.0.0-*
          prerelease: false
          make_latest: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
